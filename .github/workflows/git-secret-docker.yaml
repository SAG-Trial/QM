name: Runs Custom Docker action to use git secret

on:
    workflow_call: 
    workflow_dispatch: 
    push: 
        branches: [ main ]

jobs:
    login-private-registry:
        outputs:
          WEATHER_API_KEY: ${{steps.retrieve-secret.outputs.WEATHER_API_KEY}}
        name: Custom Container Job passing secrets
        runs-on: ubuntu-latest
        
        container: 
          image: ghcr.io/sag-trial/secret-image:latest
          env:
            INPUT: weather
          credentials:
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        steps:
          # - uses: actions/checkout@v3

          - name: Some commands
            run: |

              echo "HOME=$HOME"
              echo "GITHUB_WORKSPACE=$GITHUB_WORKSPACE"
              echo ${{github.workflow}}

              echo "cd /secerts"
              cd /secrets

              echo "Listing contents"
              ls -la

              echo $INPUT
            

          - name: Retrieve secret
            id: retrieve-secret
            run: |
              #!/bin/bash

              # Check if the INPUT environment variable is set
              if [ -n "$INPUT" ]; then
                  # Check if INPUT equals "weather"
                  if [ "$INPUT" = "weather" ]; then
                      # Send the content of .env to GITHUB_OUTPUT
                      if [ -f "/secrets/.env" ]; then
                          CONTENT=$(cat /secrets/.env | grep "^WEATHER_API=" | awk -F '=' '{print $2}'
                          )
                          echo "WEATHER_API_KEY=$CONTENT" >> $GITHUB_OUTPUT
                      else
                          echo "Error: .env file not found"
                          exit 1
                      fi
                  else
                      echo "Error: INPUT is not set to 'weather'"
                      exit 1
                  fi
              else
                  echo "Error: INPUT environment variable not set"
                  exit 1
              fi

              # If everything is successful, exit with a success code (0)
              exit 0

    verifying-output:
      runs-on: ubuntu-latest
      needs: login-private-registry
      steps:
        - name: Displaying output
          run: echo ${{needs.login-private-registry.outputs.WEATHER_API_KEY}}
    # get-ouput-from-container-job:
    #     name: Test Container Job and it's output

            # - uses: Kingmidas74/git-secret-github-action@main
            #   with:
            #     # Prefix for installation
            #     # Default: usr/local
            #     prefix: ''

            # - name: Initialize git-secret
            #   run: git secret init
            
            # - name: Git Secret Docker
            #   uses: SAG-Trial/QM/.github/actions/GitSecretDocker@main

            # Authenticating to Docker GitHub Registry
            # - name: Docker login
            #   uses: docker/login-action@v3
            #   with:
            #     registry: ghcr.io
            #     username: ${{ github.actor }}
            #     password: ${{ secrets.GITHUB_TOKEN }}
            
            # - name: Custom QM-Secrets Image Docker
            #   uses: SAG-Trial/QM/.github/actions/DockerCustomImage@main 
            #   env:
            #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}   

            # - name: Check Home Directory
            #   run: echo $HOME

            # - name: List / contents
            #   run: | 
            #     cd /
            #     tree -La 3

            # - name: Check GitHub Workspace
            #   run: echo $GITHUB_WORKSPACE

            # # Isolating a unique variable  
            # - name: Check Github Workflow name
            #   run: echo ${{github.workflow}}

            # - name: Dump GitHub context
            #   env:
            #     GITHUB_CONTEXT: ${{ toJson(github) }}
            #   run: echo "$GITHUB_CONTEXT"

            # - name: Dump job context
            #   env:
            #     JOB_CONTEXT: ${{ toJson(job) }}
            #   run: echo "$JOB_CONTEXT"

            # - name: Dump steps context
            #   env:
            #     STEPS_CONTEXT: ${{ toJson(steps) }}
            #   run: echo "$STEPS_CONTEXT"

            # - name: Dump runner context
            #   env:
            #     RUNNER_CONTEXT: ${{ toJson(runner) }}
            #   run: echo "$RUNNER_CONTEXT"
    
            
                
    # custom-docker-action:
    #   runs-on: ubuntu-latest
    #   steps:
    #     - name: Custom QM-Secrets Image Docker
    #       uses: SAG-Trial/QM/.github/actions/DockerCustomImage@main
              
            # - name: Simulate Entrypoint
            #   run: |
            #     chmod +x entrypoint.sh
            #     ./entrypoint.sh

            # - name: Push changes
            #   uses: ad-m/github-push-action@master
            #   with:
            #     github_token: ${{ secrets.GITHUB_TOKEN }}
            #     branch: ${{ github.ref }}


        