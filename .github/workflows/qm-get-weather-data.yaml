name: Get Weather Data through Vault Login
on:
    workflow_dispatch: 
    push: 
        branches: [ main ]
    workflow_call:
  
env: 
    GLOBAL_VARIABLE: "Global Variable"
        
jobs:
    generate-jwt-token:
        name: Generate a Workflow JWT Token for authorization to Vault
        permissions:
            id-token: write
            contents: read
        runs-on: ubuntu-latest
        steps:
            - name: Generate OIDC Token
              id: generate-oidc-token  
              uses: SAG-Trial/QM/.github/actions/GenerateOIDCToken@main  
        outputs:
            oidc: ${{ steps.generate-oidc-token.outputs.OIDC_BASE64 }}
            
    # Get Weather Key 
    reuse-vault-login:
        name: Reuse Vault Login Workflow And Get Key
        needs: generate-jwt-token
        permissions:
            id-token: write
            contents: read
        uses: SAG-Trial/QM/.github/workflows/reusable-vault-login.yaml@main
        secrets: 
            PARENT_OIDC: ${{needs.generate-jwt-token.outputs.oidc}}

    get-weather-data:
        name: Get Weather Data after Vault Login
        needs: reuse-vault-login
        runs-on: ubuntu-latest
        steps: 
            - name: Remove space
              id: remove-space
              run: |
                encoded_string_nospaces=$(echo ${{needs.reuse-vault-login.outputs.weatherString}} | tr -d ' ')
                echo "::add-mask::$encoded_string_nospaces"
                echo "API_TOKEN=$encoded_string_nospaces" >> $GITHUB_OUTPUT 

            # - name: Decode OIDC Token
            #   id: decode-oidc-token
            #   run: |
            #     API_TOKEN=`echo ${{ needs.reuse-vault-login.outputs.weatherString }} | base64 --decode`
            #     echo "API_TOKEN=$API_TOKEN" >> $GITHUB_OUTPUT
            
            - name: Get Weather
              uses: SAG-Trial/QM/.github/actions/GetWeather@main
              env: 
                PASSWORD: ${{ steps.remove-space.outputs.API_TOKEN }}   
               
      


        